#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language french
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Pré-Rapport du 03/12/2018 
\begin_inset Newline newline
\end_inset

Projet tutoré
\begin_inset Newline newline
\end_inset

Sujet n°5 :
\begin_inset Newline newline
\end_inset

Deep learning au service du raisonnement automatique
\begin_inset Newline newline
\end_inset

supervisé par Dr Olivier Bailleux
\begin_inset Newline newline
\end_inset

Master Bases de Données et Intelligence Artificielle
\begin_inset Newline newline
\end_inset

2018-2019
\end_layout

\begin_layout Author
Julien HALLE
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Définition du sujet
\end_layout

\begin_layout Section
Deep learning au service du raisonnement automatique
\end_layout

\begin_layout Quotation
Déterminer si une formule : logique sous forme normale conjonctive est cohérente
 (peut prendre la valeur vrai) est un problème central en raisonnement automatiq
ue.
 
\end_layout

\begin_layout Quotation
Ce problème est appelé SAT.
 Pour les petites formules, comme par exemple (a ou b) et (a ou non b) et
 (non a ou b), cela ne présente pas de difficulté particulière, mais avec
 des formules comportant des centaines ou milliers de variables, c’est un
 véritable challenge.
\end_layout

\begin_layout Quotation
L’idée à la base de ce projet est de représenter une formule CNF comme une
 sorte d’image : chaque variable correspond à une ligne, et chaque clause
 (comme (a ou b), (non a ou b), …) à une colonne.
 A l’intersection d’une ligne désignant une variable v et d’une colonne
 désignant une clause q, on a un point rouge si v appartient à q, un point
 bleu si non v appartient à q, sinon un point noir.
 
\end_layout

\begin_layout Quotation
La question est la suivante : après un apprentissage basé sur un très grand
 nombre de formules, un réseau de neurones est-il capable de reconnaître,
 d’après l’image d’une formule, si cette formule est cohérente, et dans
 le cas contraire de déterminer si son incohérence est difficile ou facile
 à établir.
 
\end_layout

\begin_layout Quote
Extrait sujet n°5 : DL au service du raisonnement automatique
\end_layout

\begin_layout Section
Formulation du problème
\end_layout

\begin_layout Standard
Une formule logique peut être représentée sous la forme d'une image avec
 pour convention la couleur des intersections (rouge = variable positive,
 bleue = variable négative, noire = variable non utilisée).
 Cette convention permet de percevoir les différences rapidement.
 La couleur noire qui est la valeur par défaut d'une image représente la
 valeur zéro dans la matrice de l'image.
\end_layout

\begin_layout Standard
Il existe deux problèmes majeurs pour ce modèle de représentation :
\end_layout

\begin_layout Enumerate
L'ordre des lignes n'a pas d'importance dans la lecture de la formule finale
\end_layout

\begin_layout Enumerate
L'ordre des colonnes n'a pas d'importance dans la lecture de la formule
 finale
\end_layout

\begin_layout Standard
\align center
\begin_inset External
	template RasterImage
	filename rendu_test_cnf.png

\end_inset


\end_layout

\begin_layout Standard
\align center
figure 1 : Exemples de générations d'une même formule logique.
\end_layout

\begin_layout Standard
On voit sur la figure 1, la génération d'une même formule qui est 
\begin_inset Formula $f=\left(a\lor\lnot c\right)$
\end_inset


\begin_inset Formula $\land$
\end_inset


\begin_inset Formula $\left(\lnot a\lor b\lor c\right)$
\end_inset

 avec respectivement 
\begin_inset Formula $q1=\left(a\lor\lnot c\right)$
\end_inset

 et 
\begin_inset Formula $q2=\left(\lnot a\lor b\lor c\right)$
\end_inset


\end_layout

\begin_layout Itemize
La première image est la représentation sans inversion.
\end_layout

\begin_layout Itemize
Dans la deuxième image, l'ordre des variables a et b a été inversé par rapport
 à l'image précédente.
\end_layout

\begin_layout Itemize
Dans la troisième image, l'ordre des clauses a été inversé par rapport à
 l'image précédente.
\end_layout

\begin_layout Itemize
Dans quatrième image, l'ordre des variables a et b a été inversé par rapport
 à l'image précédente.
\end_layout

\begin_layout Standard
Ce qui introduit un problème fondamental pour la suite : il peut exister
 plusieurs images qui sont la représentation d'une même formule.
\end_layout

\begin_layout Standard
Le but est de ne pas se retrouver avec des doublons au moment de traiter
 les images avec l'intelligence artificielle.
 C'est pourquoi il faut parvenir à obtenir une image optimale, et ceux quelque
 soit l'image de départ, en réorganisant les pixels.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Evolution du projet (03/12/2018)
\end_layout

\begin_layout Subsection*
Mise en place d'un tri sommaire
\end_layout

\begin_layout Standard
Le but étant de retrouver une même image quelque soit le mélange de celle-ci.
\end_layout

\begin_layout Standard
Rappel des opérations et influence sur l'image de sortie :
\end_layout

\begin_layout Itemize
inversion de variables : deux lignes sont échangés.
\end_layout

\begin_layout Itemize
inversion de clauses : deux colonnes sont échangés.
\end_layout

\begin_layout Itemize
inversion de signes : les points bleu deviennent rouge et inversement sur
 une ligne désigné.
\end_layout

\begin_layout Standard
Procédure actuelle :
\end_layout

\begin_layout Standard
- inversion de signes de chaque ligne afin d'obtenir le plus grand nombre
 de variables positives.
\end_layout

\begin_layout Standard
- tri des lignes par nombre de variables positives dans l'ordre décroissant.
\end_layout

\begin_layout Standard
- si le nombre de variables positive est identique sur plusieurs lignes,
 on tri par rapport aux variables négative dans l'ordre décroissant
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Le tri échouera si deux lignes ont le même nombre de variables positive
 et négative.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Amélioration possible : Il faudrait faire la même chose en triant par clauses.
 
\end_layout

\begin_layout Standard
Des exemples sont donnés dans les pages suivantes.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Figure 2 : Tri réussi
\end_layout

\begin_layout Itemize
1 ere image : l'image brut
\end_layout

\begin_layout Itemize
2eme image : l'image 1 trié
\end_layout

\begin_layout Itemize
3eme image : l'image 2 mélangé aléatoirement
\end_layout

\begin_layout Itemize
4eme image : l'image 3 trié
\end_layout

\begin_layout Standard
En encadré vert on peut apercevoir deux ligne comptant le même nombre de
 variables positives et négatives.
\end_layout

\begin_layout Standard
\align center
\begin_inset External
	template RasterImage
	filename img_iden.png
	lyxscale 70
	scale 70

\end_inset


\end_layout

\begin_layout Standard
\align center
Figure 2 : L'image trié avec succès
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Figure 3 : Echec du tri
\end_layout

\begin_layout Standard
Seconde itération du programme avec un echec du tri.
\end_layout

\begin_layout Standard
Dans l'encadré vert on peut appercevoir les deux lignes intervertis quand
 on compare la deuxième image et la quatrième image.
\end_layout

\begin_layout Standard
\align center
\begin_inset External
	template RasterImage
	filename img_dif.png
	lyxscale 70
	scale 70

\end_inset


\end_layout

\begin_layout Standard
\align center
Figure 3 : Echec du tri
\end_layout

\end_body
\end_document
